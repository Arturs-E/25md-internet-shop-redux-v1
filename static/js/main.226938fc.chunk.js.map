{"version":3,"sources":["components/SelectLanguage/selectLanguageSlice.ts","redux/hooks/hooks.ts","components/ShoppingCartIcon/ShoppingCartIcon.tsx","components/Header/Header.tsx","components/ShoppingCart/shoppingCartSlice.ts","components/ChangeQuantityButtons/ChangeQuantityButtons.tsx","components/Button/Button.tsx","components/ShoppingCartIcon/shoppingCartIconSlice.ts","components/ProductCard/ProductCard.tsx","data/ProductData.tsx","components/Products/productsSlice.ts","components/Products/Products.tsx","pages/Home.tsx","components/CartItem/CartItem.tsx","pages/ShoppingCart.tsx","App.tsx","reportWebVitals.ts","redux/store/store.ts","index.tsx"],"names":["selectLanguageSlice","createSlice","name","initialState","value","reducers","changeLanguage","state","actions","selectLanguageSliceReducer","reducer","useAppDispatch","useDispatch","useAppSelector","useSelector","ShoppingCartIcon","productCount","shoppingCartIconProductCount","count","className","icon","faShoppingCart","Header","dispatch","to","src","alt","onChange","shoppingCartSlice","addToCart","action","some","product","productName","payload","map","item","quantity","decreaseQuantity","increaseQuantity","removeItem","filter","shoppingCartSliceReducer","ChangeQuantityButtons","onClick","Button","title","clickHandler","additionalClasses","shoppingCartIconSlice","increaseCartProductCount","decreaseCartProductCount","shoppingCartIconSliceReducer","ProductCard","imgUrl","price","useState","counter","setCounter","activeLanguage","language","shoppingCartProducts","shoppingCartItems","toFixed","pricePerUnit","length","products","productDataLength","productsSlice","slice","loadMore","productsSliceReducer","Products","Home","CartItem","formattedPrice","total","faTrash","ShoppingCart","cartItems","totalSum","reduce","sum","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.226938fc.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\ninterface SelectLanguage {\n  value: string;\n}\n\nconst initialState: SelectLanguage = {\n  value: 'en',\n};\n\nexport const selectLanguageSlice = createSlice({\n  name: 'language',\n  initialState,\n  reducers: {\n    changeLanguage: (state) => (state.value === 'en' ? { value: 'lv' } : { value: 'en' }),\n  },\n});\n\nexport const { changeLanguage } = selectLanguageSlice.actions;\n\nexport const selectLanguageSliceReducer = selectLanguageSlice.reducer;\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from '../store/store';\n\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React from 'react';\nimport './ShoppingCartIcon.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faShoppingCart } from '@fortawesome/free-solid-svg-icons';\nimport { useAppSelector } from '../../redux/hooks/hooks';\nimport { RootState } from '../../redux/store/store';\n\nconst ShoppingCartIcon = () => {\n  const productCount = useAppSelector((state: RootState) => state.shoppingCartIconProductCount.count);\n  return (\n    <div className=\"header__shopping-cart-icon-wrapper\">\n      <FontAwesomeIcon className=\"header__shopping-cart-icon\" icon={faShoppingCart} />\n      {productCount === 0\n        ? ''\n        : (\n          <span className=\"header__shopping-cart-icon-quantity\">\n            {productCount}\n          </span>\n        )}\n    </div>\n\n  );\n};\n\nexport default ShoppingCartIcon;\n","import React, { FC } from 'react';\nimport './Header.scss';\nimport { Link } from 'react-router-dom';\nimport { changeLanguage } from '../SelectLanguage/selectLanguageSlice';\nimport { useAppDispatch } from '../../redux/hooks/hooks';\nimport ShoppingCartIcon from '../ShoppingCartIcon/ShoppingCartIcon';\n\nconst Header:FC = () => {\n  const dispatch = useAppDispatch();\n\n  return (\n    <div className=\"header\">\n      <nav>\n        <Link to=\"/\">\n          <img src=\"./assets/logo/Leica_Geosystems_Logo.svg\" alt=\"Leica Geosystems logo\" className=\"logo\" />\n        </Link>\n      </nav>\n      <select name=\"language\" onChange={() => dispatch(changeLanguage())}>\n        <option value=\"en\">EN</option>\n        <option value=\"lv\">LV</option>\n      </select>\n      <nav>\n        <Link to=\"/cart\">\n          <ShoppingCartIcon />\n        </Link>\n      </nav>\n    </div>\n  );\n};\n\nexport default Header;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface ShoppingCartInterface {\n  productName: string;\n  quantity: number;\n  pricePerUnit: number;\n  imgUrl: string;\n}\n\nconst initialState: ShoppingCartInterface[] = [];\n\nconst shoppingCartSlice = createSlice({\n  name: 'shoppingCartItems',\n  initialState,\n  reducers: {\n    addToCart: (state, action: PayloadAction<ShoppingCartInterface>) => {\n      if (state.some((product) => product.productName === action.payload.productName)) {\n        return (\n          state.map((item) => {\n            if (item.productName === action.payload.productName) {\n              return { ...item, quantity: item.quantity + 1 };\n            }\n            return item;\n          })\n        );\n      }\n      return [...state, action.payload];\n    },\n    decreaseQuantity: (state, action: PayloadAction<string>) => (\n      state.map((item) => {\n        if (item.productName === action.payload && item.quantity > 0) {\n          return { ...item, quantity: item.quantity - 1 };\n        }\n        return item;\n      })\n    ),\n    increaseQuantity: (state, action: PayloadAction<string>) => (\n      state.map((item) => {\n        if (item.productName === action.payload) {\n          return { ...item, quantity: item.quantity + 1 };\n        }\n        return item;\n      })\n    ),\n    removeItem: (state, action: PayloadAction<string>) => (\n      state.filter((item) => item.productName !== action.payload)\n    ),\n  },\n});\n\nconst {\n  addToCart, decreaseQuantity, increaseQuantity, removeItem,\n} = shoppingCartSlice.actions;\n\nconst shoppingCartSliceReducer = shoppingCartSlice.reducer;\n\nexport {\n  addToCart, decreaseQuantity, increaseQuantity, removeItem, shoppingCartSliceReducer,\n};\nexport type { ShoppingCartInterface };\n","import React, { FC } from 'react';\nimport './ChangeQuantityButtons.scss';\n\ninterface ChangeQuantityButtonsProps {\n  decreaseQuantity: () => void;\n  quantity: number;\n  increaseQuantity: () => void;\n}\n\nconst ChangeQuantityButtons:FC<ChangeQuantityButtonsProps> = ({ decreaseQuantity, quantity, increaseQuantity }) => (\n  <div className=\"change-quantity-buttons\">\n    <button className=\"change-quantity-buttons__button\" onClick={decreaseQuantity}>-</button>\n    <span>{quantity}</span>\n    <button className=\"change-quantity-buttons__button\" onClick={increaseQuantity}>+</button>\n  </div>\n);\n\nexport default ChangeQuantityButtons;\n","import React, { FC } from 'react';\nimport './Button.scss';\n\ninterface ButtonProps {\n  title: string;\n  clickHandler?: () => void;\n  additionalClasses?: string;\n}\n\nconst Button:FC<ButtonProps> = ({ title, clickHandler, additionalClasses }) => (\n  <button className={`button ${additionalClasses}`} onClick={clickHandler}>\n    {title}\n  </button>\n);\n\nexport default Button;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface ShoppingCartIcon {\n  count: number;\n}\n\nconst initialState: ShoppingCartIcon = {\n  count: 0,\n};\n\nconst shoppingCartIconSlice = createSlice({\n  name: 'shoppingCartIconProductCount',\n  initialState,\n  reducers: {\n    increaseCartProductCount: (state, action: PayloadAction<number>) => ({ count: action.payload + 1 }),\n    decreaseCartProductCount: (state, action: PayloadAction<number>) => ({ count: action.payload - 1 }),\n  },\n});\n\nconst { increaseCartProductCount, decreaseCartProductCount } = shoppingCartIconSlice.actions;\n\nconst shoppingCartIconSliceReducer = shoppingCartIconSlice.reducer;\n\nexport { increaseCartProductCount, decreaseCartProductCount, shoppingCartIconSliceReducer };\n","import React, { FC, useState } from 'react';\nimport './ProductCard.scss';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { RootState } from '../../redux/store/store';\nimport { addToCart } from '../ShoppingCart/shoppingCartSlice';\nimport ChangeQuantityButtons from '../ChangeQuantityButtons/ChangeQuantityButtons';\nimport Button from '../Button/Button';\nimport { increaseCartProductCount } from '../ShoppingCartIcon/shoppingCartIconSlice';\n\ninterface ProductCardProps {\n  imgUrl: string;\n  productName: string;\n  price: number;\n}\n\nconst ProductCard:FC<ProductCardProps> = ({ imgUrl, productName, price }) => {\n  const [counter, setCounter] = useState(1);\n  const dispatch = useAppDispatch();\n  const activeLanguage = useAppSelector((state: RootState) => state.language.value);\n  const shoppingCartProducts = useAppSelector((state) => state.shoppingCartItems);\n\n  const decreaseQuantity = () => {\n    if (counter > 1) {\n      setCounter(counter - 1);\n    }\n  };\n\n  const increaseQuantity = () => {\n    setCounter(counter + 1);\n  };\n\n  const addProductToCart = () => {\n    dispatch(addToCart({\n      productName, quantity: counter, pricePerUnit: price, imgUrl,\n    }));\n    if (!shoppingCartProducts.some((item) => item.productName === productName)) {\n      dispatch(increaseCartProductCount(shoppingCartProducts.length));\n    }\n  };\n\n  return (\n    <div className=\"products__product-card\">\n      <div className=\"products__product-card-image-wrapper\">\n        <img src={imgUrl} alt={productName} className=\"products__product-card-image\" />\n      </div>\n      <div className=\"products__product-card-info-wrapper\">\n        <div className=\"products__product-card-name-price-wrapper\">\n          <h4 className=\"heading4\">{productName}</h4>\n          <span className=\"products__product-card-price\">\n            {\n            activeLanguage === 'en' ? `Price: ${price.toFixed(2)} EUR` : `Cena: ${price.toFixed(2)} EUR`\n          }\n          </span>\n        </div>\n        <div className=\"products__product-card-add-to-cart-wrapper\">\n          <ChangeQuantityButtons\n            decreaseQuantity={decreaseQuantity}\n            quantity={counter}\n            increaseQuantity={increaseQuantity}\n          />\n          <Button\n            title={activeLanguage === 'en' ? 'Add' : 'Pievienot'}\n            clickHandler={addProductToCart}\n            additionalClasses=\"button--add-to-cart\"\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ProductCard;\n","interface ProductData {\n  productName: string;\n  price: number;\n  imgUrl: string;\n}\n\nconst products:ProductData[] = [\n  {\n    productName: 'Leica Disto D1',\n    price: 70.00,\n    imgUrl: './assets/images/disto/disto d1.jpg',\n  },\n  {\n    productName: 'Leica Disto D110',\n    price: 160.00,\n    imgUrl: './assets/images/disto/disto d110.jpg',\n  },\n  {\n    productName: 'Leica Disto D2',\n    price: 200.00,\n    imgUrl: './assets/images/disto/disto d2.jpg',\n  },\n  {\n    productName: 'Leica Disto X3',\n    price: 310.00,\n    imgUrl: './assets/images/disto/disto x3.jpg',\n  },\n  {\n    productName: 'Leica Disto X4',\n    price: 430.00,\n    imgUrl: './assets/images/disto/disto x4.jpg',\n  },\n  {\n    productName: 'Leica Disto D510',\n    price: 500.00,\n    imgUrl: './assets/images/disto/disto d510.jpg',\n  },\n  {\n    productName: 'Leica Disto D810',\n    price: 720.00,\n    imgUrl: './assets/images/disto/disto d810.jpg',\n  },\n  {\n    productName: 'Leica Disto S910',\n    price: 1530.00,\n    imgUrl: './assets/images/disto/disto s910.jpg',\n  },\n  {\n    productName: 'Leica Disto DST360',\n    price: 590.00,\n    imgUrl: './assets/images/disto/dst360.png',\n  },\n  {\n    productName: 'Leica Lino L2',\n    price: 240.00,\n    imgUrl: './assets/images/lino/lino l2.jpg',\n  },\n  {\n    productName: 'Leica Lino L2G',\n    price: 400.00,\n    imgUrl: './assets/images/lino/lino l2g.jpg',\n  },\n  {\n    productName: 'Leica Lino L2P5',\n    price: 390.00,\n    imgUrl: './assets/images/lino/lino l2p5.png',\n  },\n  {\n    productName: 'Leica Lino L2P5G',\n    price: 600.00,\n    imgUrl: './assets/images/lino/lino l2p5g.jpg',\n  },\n  {\n    productName: 'Leica Lino L6R',\n    price: 495.00,\n    imgUrl: './assets/images/lino/lino l6r.jpg',\n  },\n  {\n    productName: 'Leica Lino L6G',\n    price: 570.00,\n    imgUrl: './assets/images/lino/lino l6g.jpg',\n  },\n  {\n    productName: 'Leica Lino L4P1',\n    price: 600.00,\n    imgUrl: './assets/images/lino/lino l4p1.jpg',\n  },\n  {\n    productName: 'Leica Lino ML180',\n    price: 1350.00,\n    imgUrl: './assets/images/lino/lino ml180.jpg',\n  },\n  {\n    productName: 'Leica Disto 3D',\n    price: 5600.00,\n    imgUrl: './assets/images/disto/disto 3d.jpg',\n  },\n  {\n    productName: 'Leica BLK3D',\n    price: 4900.00,\n    imgUrl: './assets/images/blk/blk3d.png',\n  },\n  {\n    productName: 'Leica BLK360',\n    price: 15900.00,\n    imgUrl: './assets/images/blk/blk360.jpg',\n  },\n  {\n    productName: 'Leica BLK2GO',\n    price: 35000.00,\n    imgUrl: './assets/images/blk/blk2go.jpg',\n  },\n];\n\nconst productDataLength = products.length;\n\nexport { products, productDataLength };\nexport type { ProductData };\n","import { createSlice } from '@reduxjs/toolkit';\nimport { products } from '../../data/ProductData';\n\nexport const productsSlice = createSlice({\n  name: 'products',\n  initialState: products.slice(0, 9),\n  reducers: {\n    loadMore: (state) => products.slice(0, state.length + 3),\n  },\n});\n\nexport const { loadMore } = productsSlice.actions;\n\nexport const productsSliceReducer = productsSlice.reducer;\n","import React, { FC } from 'react';\nimport './Products.scss';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { RootState } from '../../redux/store/store';\nimport ProductCard from '../ProductCard/ProductCard';\nimport Button from '../Button/Button';\nimport { loadMore } from './productsSlice';\nimport { productDataLength } from '../../data/ProductData';\n\nconst Products:FC = () => {\n  const products = useAppSelector((state: RootState) => state.products);\n  const activeLanguage = useAppSelector((state: RootState) => state.language.value);\n  const dispatch = useAppDispatch();\n\n  const loadMoreProducts = () => {\n    dispatch(loadMore());\n  };\n\n  return (\n    <section className=\"products\">\n      <div className=\"products__product-card-wrapper\">\n        {\n          products.map(({ imgUrl, productName, price }) => (\n            <ProductCard key={productName} imgUrl={imgUrl} productName={productName} price={price} />\n          ))\n        }\n      </div>\n      {\n        products.length < productDataLength && (\n        <Button\n          title={activeLanguage === 'en' ? 'Load more' : 'Ielādēt vēl'}\n          clickHandler={loadMoreProducts}\n          additionalClasses=\"button--load-more\"\n        />\n        )\n      }\n    </section>\n  );\n};\n\nexport default Products;\n","import React from 'react';\nimport { useAppSelector } from '../redux/hooks/hooks';\nimport { RootState } from '../redux/store/store';\nimport Products from '../components/Products/Products';\n\nconst Home = () => {\n  const activeLanguage = useAppSelector((state: RootState) => state.language.value);\n  return (\n    <section className=\"home\">\n      <h1 className=\"heading1\">\n        {activeLanguage === 'en' && 'Home'}\n        {activeLanguage === 'lv' && 'Produkti'}\n      </h1>\n      <Products />\n    </section>\n  );\n};\n\nexport default Home;\n","import React, { FC } from 'react';\nimport './CartItem.scss';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash } from '@fortawesome/free-solid-svg-icons';\nimport { RootState } from '../../redux/store/store';\nimport ChangeQuantityButtons from '../ChangeQuantityButtons/ChangeQuantityButtons';\nimport { useAppDispatch, useAppSelector } from '../../redux/hooks/hooks';\nimport { decreaseQuantity, increaseQuantity, removeItem } from '../ShoppingCart/shoppingCartSlice';\nimport { decreaseCartProductCount } from '../ShoppingCartIcon/shoppingCartIconSlice';\n\ninterface CartItemProps {\n  productName: string;\n  quantity: number;\n  price: number;\n  imgUrl: string;\n}\n\nconst CartItem:FC<CartItemProps> = ({\n  productName, quantity, price, imgUrl,\n}) => {\n  const activeLanguage = useAppSelector((state: RootState) => state.language.value);\n  const shoppingCartItems = useAppSelector((state: RootState) => state.shoppingCartItems);\n  const dispatch = useAppDispatch();\n  const formattedPrice = price.toFixed(2);\n  const total = (quantity * price).toFixed(2);\n\n  const decreaseItemCount = () => {\n    dispatch(decreaseQuantity(productName));\n  };\n\n  const increaseItemCount = () => {\n    dispatch(increaseQuantity(productName));\n  };\n\n  const removeProduct = () => {\n    dispatch(removeItem(productName));\n    dispatch(decreaseCartProductCount(shoppingCartItems.length));\n  };\n\n  return (\n    <div className=\"shopping-cart__item-wrapper\">\n      <img src={imgUrl} alt={productName} className=\"shopping-cart__item-image\" />\n      <h4 className=\"heading4\">{productName}</h4>\n      <div className=\"shopping-cart__price-quantity-wrapper\">\n        <span>\n          {\n            activeLanguage === 'en' ? `Price per unit: ${formattedPrice} EUR` : `Cena/gab.: ${formattedPrice} EUR`\n          }\n        </span>\n        <span className=\"shopping-cart__quantity-wrapper\">\n          {activeLanguage === 'en' ? 'Quantity: ' : 'Skaits: '}\n          <ChangeQuantityButtons\n            decreaseQuantity={decreaseItemCount}\n            quantity={quantity}\n            increaseQuantity={increaseItemCount}\n          />\n        </span>\n        <span>\n          {\n            activeLanguage === 'en' ? `Total: ${total} EUR` : `Kopā: ${total} EUR`\n          }\n        </span>\n      </div>\n      <FontAwesomeIcon icon={faTrash} className=\"shopping-cart__remove-item\" onClick={removeProduct} />\n    </div>\n  );\n};\n\nexport default CartItem;\n","import React from 'react';\nimport { useAppSelector } from '../redux/hooks/hooks';\nimport { RootState } from '../redux/store/store';\nimport CartItem from '../components/CartItem/CartItem';\nimport { ShoppingCartInterface } from '../components/ShoppingCart/shoppingCartSlice';\n\nconst ShoppingCart = () => {\n  const activeLanguage = useAppSelector((state: RootState) => state.language.value);\n  const cartItems = useAppSelector((state) => state.shoppingCartItems);\n\n  const totalSum = cartItems\n    .reduce((sum: number, item) => sum + (item.quantity * item.pricePerUnit), 0)\n    .toFixed(2);\n\n  return (\n    <section className=\"shopping-cart\">\n      <h1 className=\"heading1\">{activeLanguage === 'en' ? 'Shopping Cart' : 'Pirkumu grozs'}</h1>\n      <div className=\"shopping-cart__list-wrapper\">\n        {\n          cartItems.map(({\n            productName,\n            quantity,\n            pricePerUnit,\n            imgUrl,\n          }) => (\n            <CartItem\n              key={productName}\n              productName={productName}\n              quantity={quantity}\n              price={pricePerUnit}\n              imgUrl={imgUrl}\n            />\n          ))\n        }\n      </div>\n      <span className=\"shopping-cart__total-sum\">\n        {activeLanguage === 'en' ? `Total: ${totalSum} EUR` : `Kopā: ${totalSum} EUR`}\n      </span>\n    </section>\n  );\n};\n\nexport default ShoppingCart;\n","import React from 'react';\nimport './App.scss';\nimport {\n  BrowserRouter, Routes, Route,\n} from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Home from './pages/Home';\nimport ShoppingCart from './pages/ShoppingCart';\n\nconst App = () => (\n  <BrowserRouter>\n    <div className=\"internet-shop\">\n      <div className=\"internet-shop-wrapper\">\n        <Header />\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/cart\" element={<ShoppingCart />} />\n        </Routes>\n      </div>\n    </div>\n  </BrowserRouter>\n);\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore } from '@reduxjs/toolkit';\nimport { selectLanguageSliceReducer } from '../../components/SelectLanguage/selectLanguageSlice';\nimport { productsSliceReducer } from '../../components/Products/productsSlice';\nimport { shoppingCartSliceReducer } from '../../components/ShoppingCart/shoppingCartSlice';\nimport { shoppingCartIconSliceReducer } from '../../components/ShoppingCartIcon/shoppingCartIconSlice';\n\nexport const store = configureStore({\n  reducer: {\n    language: selectLanguageSliceReducer,\n    products: productsSliceReducer,\n    shoppingCartItems: shoppingCartSliceReducer,\n    shoppingCartIconProductCount: shoppingCartIconSliceReducer,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\nexport type AppDispatch = typeof store.dispatch;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { Provider } from 'react-redux';\n\nimport { HashRouter } from 'react-router-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { store } from './redux/store/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <HashRouter>\n        <App />\n      </HashRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}